{"version":3,"sources":["api.ts","components/State/State.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodosContext","React","createContext","allTodos","setAllTodos","filteredTodos","setFilteredTodos","isLoading","setIsLoading","isLoadingModal","setIsLoadingModal","query","setQuery","selectOption","setSelectOption","selectTodo","setSelectTodo","user","setUser","TodosContextProvider","children","useState","useEffect","finally","userId","filtered","filter","todo","completed","title","toLowerCase","includes","filterTodos","Provider","value","TodoList","memo","useContext","className","map","id","cn","type","onClick","TodoFilter","onChange","e","target","placeholder","trim","style","pointerEvents","Loader","TodoModal","email","name","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2364497c.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { getTodos, getUser } from '../../api';\nimport { ContextTodo } from '../../types/ContextTodo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosContext = React.createContext<ContextTodo>({\n  allTodos: [],\n  setAllTodos: () => {},\n  filteredTodos: [],\n  setFilteredTodos: () => {},\n  isLoading: false,\n  setIsLoading: () => {},\n  isLoadingModal: false,\n  setIsLoadingModal: () => {},\n  query: '',\n  setQuery: () => {},\n  selectOption: '',\n  setSelectOption: () => {},\n  selectTodo: null,\n  setSelectTodo: () => {},\n  user: null,\n  setUser: () => {},\n});\n\nexport const TodosContextProvider: React.FC<Props> = ({ children }) => {\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectOption, setSelectOption] = useState('');\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [selectTodo, setSelectTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoadingModal, setIsLoadingModal] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setAllTodos)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (selectTodo) {\n      setIsLoadingModal(true);\n\n      getUser(selectTodo.userId)\n        .then(setUser)\n        .finally(() => {\n          setIsLoadingModal(false);\n        });\n    }\n  }, [selectTodo]);\n\n  useEffect(() => {\n    const filterTodos = () => {\n      let filtered = [...allTodos];\n\n      if (selectOption === 'active') {\n        filtered = filtered.filter((todo) => !todo.completed);\n      } else if (selectOption === 'completed') {\n        filtered = filtered.filter((todo) => todo.completed);\n      }\n\n      filtered = filtered.filter(\n        (todo) => todo.title.toLowerCase().includes(query.toLowerCase()),\n      );\n\n      setFilteredTodos(filtered);\n    };\n\n    filterTodos();\n  }, [allTodos, query, selectOption]);\n\n  return (\n    <TodosContext.Provider value={{\n      allTodos,\n      setAllTodos,\n      isLoading,\n      setIsLoading,\n      query,\n      setQuery,\n      filteredTodos,\n      setFilteredTodos,\n      selectOption,\n      setSelectOption,\n      selectTodo,\n      setSelectTodo,\n      user,\n      setUser,\n      isLoadingModal,\n      setIsLoadingModal,\n    }}\n    >\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import cn from 'classnames';\nimport React, { useContext } from 'react';\nimport { TodosContext } from '../State';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = React.memo(() => {\n  const { filteredTodos, setSelectTodo, selectTodo } = useContext(TodosContext);\n\n  const handleTodoModal = (selectedTodo: Todo) => {\n    setSelectTodo(selectedTodo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn('has-text-success',\n                { 'has-text-danger': !todo.completed })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleTodoModal(todo)}\n              >\n\n                <span className=\"icon\">\n                  <i className={cn({\n                    'far fa-eye-slash': todo.id === selectTodo?.id,\n                    'far fa-eye': todo.id !== selectTodo?.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import { useContext } from 'react';\nimport { TodosContext } from '../State';\n\nexport const TodoFilter = () => {\n  const { setQuery, query, setSelectOption } = useContext(TodosContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setSelectOption(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value.trim())}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport React, { useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { TodosContext } from '../State';\n\nexport const TodoModal: React.FC = React.memo(() => {\n  const {\n    user,\n    selectTodo,\n    setUser,\n    setSelectTodo,\n    isLoadingModal,\n  } = useContext(TodosContext);\n\n  if (!selectTodo && !user) {\n    return null;\n  }\n\n  const { title, id, completed } = selectTodo || {};\n  const { email, name } = user || {};\n\n  const handleUser = () => {\n    setUser(null);\n    setSelectTodo(null);\n  };\n\n  return (\n    <>\n      {isLoadingModal\n        ? (\n          <div className=\"modal is-active\" data-cy=\"modal\">\n            <div className=\"modal-background\" />\n            <Loader />\n          </div>\n        ) : (\n          <div className=\"modal is-active\" data-cy=\"modal\">\n            <div className=\"modal-background\" />\n\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleUser}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {/* <strong className=\"has-text-success\">Done</strong> */}\n                  <strong className={cn('has-text-success',\n                    { 'has-text-danger': !completed })}\n                  >\n                    {completed ? 'Done' : 'Planned'}\n                  </strong>\n\n                  {' by '}\n\n                  <a href={`mailto:${email}`}>\n                    {name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n    </>\n  );\n});\n","/* eslint-disable max-len */\nimport React, { useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodosContext, TodosContextProvider } from './components/State';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const { isLoading } = useContext(TodosContext);\n\n  return (\n    <TodosContextProvider>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal />\n    </TodosContextProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}