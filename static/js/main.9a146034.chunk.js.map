{"version":3,"sources":["api.ts","components/State/State.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodosContext","React","createContext","allTodos","filteredTodos","isLoading","isLoadingModal","query","setQuery","selectOption","setSelectOption","selectTodo","setSelectTodo","user","TodosContextProvider","children","useState","setAllTodos","setIsLoading","setUser","setIsLoadingModal","useEffect","catch","error","Error","finally","userId","useMemo","filtered","filter","todo","completed","title","toLowerCase","includes","Provider","value","TodoList","memo","useContext","className","map","id","cn","type","onClick","TodoFilter","onChange","e","target","placeholder","style","pointerEvents","Loader","TodoModal","email","name","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a146034.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { getTodos, getUser } from '../../api';\nimport { ContextTodo } from '../../types/ContextTodo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosContext = React.createContext<ContextTodo>({\n  allTodos: [],\n  filteredTodos: [],\n  isLoading: false,\n  isLoadingModal: false,\n  query: '',\n  setQuery: () => {},\n  selectOption: '',\n  setSelectOption: () => {},\n  selectTodo: null,\n  setSelectTodo: () => {},\n  user: null,\n});\n\nexport const TodosContextProvider: React.FC<Props> = ({ children }) => {\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectOption, setSelectOption] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectTodo, setSelectTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoadingModal, setIsLoadingModal] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setAllTodos)\n      .catch(error => {\n        throw new Error(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  useEffect(() => {\n    if (selectTodo) {\n      setIsLoadingModal(true);\n\n      getUser(selectTodo.userId)\n        .then(setUser)\n        .catch(error => {\n          throw new Error(error);\n        })\n        .finally(() => setIsLoadingModal(false));\n    }\n  }, [selectTodo]);\n\n  const filteredTodos = useMemo(() => {\n    let filtered = [...allTodos];\n\n    if (selectOption === 'active') {\n      filtered = filtered.filter((todo) => !todo.completed);\n    } else if (selectOption === 'completed') {\n      filtered = filtered.filter((todo) => todo.completed);\n    }\n\n    return filtered.filter(\n      (todo) => todo.title.toLowerCase().includes(query.toLowerCase()),\n    );\n  }, [allTodos, query, selectOption]);\n\n  return (\n    <TodosContext.Provider value={{\n      allTodos,\n      isLoading,\n      query,\n      setQuery,\n      filteredTodos,\n      selectOption,\n      setSelectOption,\n      selectTodo,\n      setSelectTodo,\n      user,\n      isLoadingModal,\n    }}\n    >\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import cn from 'classnames';\nimport React, { useContext } from 'react';\nimport { TodosContext } from '../State';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = React.memo(() => {\n  const { filteredTodos, setSelectTodo, selectTodo } = useContext(TodosContext);\n\n  const handleTodoModal = (selectedTodo: Todo) => {\n    setSelectTodo(selectedTodo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn('has-text-success',\n                { 'has-text-danger': !todo.completed })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleTodoModal(todo)}\n              >\n\n                <span className=\"icon\">\n                  <i className={cn({\n                    'far fa-eye-slash': todo.id === selectTodo?.id,\n                    'far fa-eye': todo.id !== selectTodo?.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import { useContext } from 'react';\nimport { TodosContext } from '../State';\n\nexport const TodoFilter = () => {\n  const { setQuery, query, setSelectOption } = useContext(TodosContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setSelectOption(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport React, { useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { TodosContext } from '../State';\n\nexport const TodoModal: React.FC = React.memo(() => {\n  const {\n    user,\n    selectTodo,\n    setSelectTodo,\n    isLoadingModal,\n  } = useContext(TodosContext);\n\n  if (!selectTodo || !user) {\n    return null;\n  }\n\n  const { title, id, completed } = selectTodo;\n  const { email, name } = user;\n\n  const handleUser = () => {\n    setSelectTodo(null);\n  };\n\n  return (\n    <>\n      {isLoadingModal\n        ? (\n          <div className=\"modal is-active\" data-cy=\"modal\">\n            <div className=\"modal-background\" />\n            <Loader />\n          </div>\n        ) : (\n          <div className=\"modal is-active\" data-cy=\"modal\">\n            <div className=\"modal-background\" />\n\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleUser}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {/* <strong className=\"has-text-success\">Done</strong> */}\n                  <strong className={cn('has-text-success',\n                    { 'has-text-danger': !completed })}\n                  >\n                    {completed ? 'Done' : 'Planned'}\n                  </strong>\n\n                  {' by '}\n\n                  <a href={`mailto:${email}`}>\n                    {name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n    </>\n  );\n});\n","/* eslint-disable max-len */\nimport React, { useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodosContext } from './components/State';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const { isLoading } = useContext(TodosContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n            </div>\n\n            <div className=\"block\">\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosContextProvider } from './components/State';\n\nReactDOM.render(\n  <TodosContextProvider>\n    <App />\n  </TodosContextProvider>,\n  document.getElementById('root'),\n\n);\n"],"sourceRoot":""}